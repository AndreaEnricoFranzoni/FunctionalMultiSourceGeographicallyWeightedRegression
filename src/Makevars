###############
## NO OPENMP ##
###############
#PKG_LIBS = $(LAPACK_LIBS) $(FLIBS) $(BLAS_LIBS)
#PKG_LIBS += -stdlib=libc++                  #aggiunto questa riga solo per utilizzare std::numbers (forse non da aggiunger)

#CXX_STD = CXX20













###############
## OPENMP    ##
###############

CXX_STD = CXX20
#for retaining operative system
OS = $(shell uname -s)
#for retaining architecture
ARCH = $(shell uname -m)

        # macOS
ifeq ($(OS),Darwin)
    # Homebrew path depending on the architecture
    ifeq ($(ARCH),arm64)
        HOMEBREW_PREFIX = /opt/homebrew
    else
        HOMEBREW_PREFIX = /usr/local
    endif

    #CC = $(HOMEBREW_PREFIX)/opt/llvm/bin/clang
    #CXX = $(HOMEBREW_PREFIX)/opt/llvm/bin/clang++
    PKG_CXXFLAGS = -Xpreprocessor -fopenmp -I$(HOMEBREW_PREFIX)/opt/libomp/include -O3
    PKG_CXXFLAGS += -stdlib=libc++              #aggiunto questa riga solo per utilizzare std::numbers (forse da togliere)
    PKG_CFLAGS = -fopenmp
    PKG_CPPFLAGS = -I./fdaPDE-core   -I../inst/include
    PKG_LIBS = $(LAPACK_LIBS) $(FLIBS) $(BLAS_LIBS)
    PKG_LIBS += -L$(HOMEBREW_PREFIX)/opt/libomp/lib -lomp
    PKG_LIBS += -stdlib=libc++                  #aggiunto questa riga solo per utilizzare std::numbers (forse da togliere)


    #le prossime righe di questo OS servono per utilizzare clang da homebrew aggiornato

    CXX = $(HOMEBREW_PREFIX)/opt/llvm/bin/clang++

    CXXFLAGS = -O3 -Wall -stdlib=libc++ -std=c++20      #decommentato questo
    LDFLAGS = -L$(HOMEBREW_PREFIX)/opt/llvm/lib
    CPPFLAGS = -I$(HOMEBREW_PREFIX)/opt/llvm/include

endif

# Linux
ifeq ($(OS),Linux)
    CC = gcc
    CXX = g++
    PKG_CXXFLAGS = -fopenmp
    PKG_CPPFLAGS = -I./fdaPDE-core/fdaPDE
    PKG_LIBS = $(LAPACK_LIBS) $(FLIBS) $(BLAS_LIBS)
    PKG_LIBS += -fopenmp
endif

# Windows (RTools)
ifeq ($(OS),Windows)
    CC = gcc
    CXX = g++
    PKG_CXXFLAGS = -fopenmp
    PKG_CPPFLAGS = -I./fdaPDE-core/fdaPDE
    PKG_LIBS = $(LAPACK_LIBS) $(FLIBS) $(BLAS_LIBS)
    PKG_LIBS += -fopenmp
endif
